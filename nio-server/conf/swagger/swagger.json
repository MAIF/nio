{
  "swagger": "2.0",
  "info": {
    "version": "1.0-SNAPSHOT",
    "title": "Swagger Nio",
    "description": "La GDPR (General Data Protection Regulation) est la réglementation générale sur la protection des données (personnelles) par la mise en place de permissions et de consentements utilisateurs. Nio est l'outil permettant la mise en place de cette GDPR. A partir des APIs suivantes vous pourrez gérer les permissions de votre organisation et les consentements pour chacun de vos utilisateurs pour ces demandes de permissions."
  },
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "organisation",
      "description": "L'organisation est une entité logique, comme par exemple Maif, Altima ... Des groupes peuvent être définit dans une organisation, comme par exemple au sein de de l'organisation Maif on peut avoir un groupe Maif et un groupe partenaire Maif. Des permissions sont définit pour chacun de ces groupes (par exemple contact par mail, par téléphone ...). La gestion des versions se fait soit en brouillon, soit en publication. La version brouillon peut être publiée, elle deviendra donc non-modifiable, mais une nouvelle version en brouillon sera créée. Les APIs ci-dessous vont vous permettre de gérer toutes les notions que l'on vient de voir."
    },
    {
      "name": "utilisateur",
      "description": "Une fois l'organisation et les permissions gérées. L'utilisateur va pouvoir gérer ces consentements et les modifier. La gestion des consentements se fait par l'acceptation ou le refus des permissions demandées par l'organisation. Pour un nouvel utilisateur, on peut récupérer la dernière version publiée des permissions de l'organisation (/_template). Les APIs ci-dessous vont vous permettre de gérer les consentements pour vos utilisateurs (nouveaux ou anciens)."
    },
    {
      "name": "tenant",
      "description": "La notion de tenant corresponds à un environnement spécifique. Les Apis décritent ci-dessous vous permettent de créer un nouveau tenant et d'accéder à la liste des tenants existants"
    },
    {
      "name": "compte",
      "description": "La notion de compte corresponds à l'association des utilisateurs présents sur les différentes applications avec les organisations correspondantes. Les APIs ci-dessous vont vous permettre d'administrer ces associations."
    },
    {
      "name": "extraction",
      "description": "L'extraction des données des utilisateurs est à la charge des applications, Nio offre une API pour avertir qu'une demande d'extraction de données a été demander. La demande d'extraction corresponds à l'ajout d'un événement typé dans Kafka. Une fois l'événement lu par une application elle va ensuite  charger le fichier correspondant à l'extraction de l'utilisateur dans Nio.  Une fois le fichier chargé, un e-mail avec un lien vers le fichier est envoyé à l'utilisateur."
    },
    {
      "name": "suppression",
      "description": "La suppression des données des utilisateurs est à la charge des applications, Nio offre une API pour démarrer une suppression, obtenir le deétails d'une suppression, lister toutes les suppressions ainsi que de mettre a jour l'état d'une suppression."
    },
    {
      "name": "offre",
      "description": "La notion d'offre corresponds à l'ajout de permissions spécifiques à une  application sur une organisation donnée."
    }
  ],
  "paths": {
    "/api/{tenant}/organisations": {
      "get": {
        "tags": [
          "organisation"
        ],
        "summary": "La liste des organisations connues.",
        "description": "Récupération de la liste des organisations connus soit en prenant la dernière version publiée pour cette organisation soit en prenant la version brouillon.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des organisations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganisationLight"
              }
            }
          },
          "404": {
            "description": "Le tenant n'existe pas."
          }
        }
      },
      "post": {
        "tags": [
          "organisation"
        ],
        "summary": "Créer une nouvelle organisation.",
        "description": "Création d'une nouvelle organisation en spécifiant les différentes permissions souhaitées en les rassemblant par groupes.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "organisation",
            "in": "body",
            "description": "L'organisation à créer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "L'organisation est créée.",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          },
          "400": {
            "description": "Le format de l'organisation est incorrect."
          },
          "404": {
            "description": "Le tenant n'existe pas."
          },
          "409": {
            "description": "La clé de l'organisation existe déjà."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}": {
      "get": {
        "tags": [
          "organisation"
        ],
        "summary": "Toutes les versions publiées d'une organisation.",
        "description": "Récupération de l'historique des versions publiées pour une organisation donnée.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des versions publiées de l'organisation.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organisation"
              }
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      },
      "delete": {
        "tags": [
          "organisation"
        ],
        "summary": "Supprimer une organisation.",
        "description": "Suppression d'une organisation.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'organisation a été supprimée ainsi que les consentements et utilisateurs liées à l'organisation."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/last": {
      "get": {
        "tags": [
          "organisation"
        ],
        "summary": "La dernière version publiée.",
        "description": "Récupération de la dernière version publiée pour une organisation donnée.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La dernière version publiée de l'organisation.",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas ou l'organisation n'a jamais publiée une version."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/draft": {
      "get": {
        "tags": [
          "organisation"
        ],
        "summary": "Le brouillon courant.",
        "description": "Récupération du brouillon pour une organisation donnée. A noter, si une organisation existe elle a forcément une version brouillon de disponible.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La version brouillon de l'organisation.",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      },
      "put": {
        "tags": [
          "organisation"
        ],
        "summary": "Mise à jour du brouillon courant.",
        "description": "Mise à jour du brouillon courant pour une organisation donnée. Cette opération ne publie pas la version brouillon.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "organisation",
            "in": "body",
            "description": "Le brouillon de l'organisation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le brouillon de l'organisation a été mis à jour.",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          },
          "400": {
            "description": "Le format de l'organisation est incorrect."
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/draft/_release": {
      "post": {
        "tags": [
          "organisation"
        ],
        "summary": "Publication d'une nouvelle version.",
        "description": "Publication de la version brouillon courante de l'organisation. Cette opération va permettre de publier un brouillon, créer un nouveau brouillon à partir de la version publiée en incrémentant la version du brouillon en vue de la prochaine publication.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation à publier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La nouvelle version de l'organisation a été publiée.",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/{versionNum}": {
      "get": {
        "tags": [
          "organisation"
        ],
        "summary": "La version spécifique.",
        "description": "Récupération d'une version spécifique publiée pour une organisation donnée.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionNum",
            "in": "path",
            "description": "La version spécifique de l'organisation",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "La version spécifique publiée de l'organisation.",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          },
          "404": {
            "description": "Le tenant, l'organisation ou la version spécifiée n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/offers": {
      "get": {
        "tags": [
          "offre"
        ],
        "summary": "La liste des offres d'une organisation",
        "description": "Récupération de la liste des offres pour une organisation données.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des offres pour une organisation donnée.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Offer"
              }
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      },
      "post": {
        "tags": [
          "offre"
        ],
        "summary": "Créer une offre pour une organisation",
        "description": "Création d'une offre pour une organisation données.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'offre a bien été créée sur l'organisation donnée.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "401": {
            "description": "Le contexte utilisateur ne permet pas de créer une offre avec cette clé d'offre"
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas ou l'organisation n'a jamais été passé au statut \"RELEASED\""
          },
          "409": {
            "description": "La clé de l'offre existe déjà dans l'organisation."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/offers/{offerKey}": {
      "put": {
        "tags": [
          "offre"
        ],
        "summary": "Mettre à jour une offre d'une organisation",
        "description": "Mise à jour d'une offre pour une organisation données.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerKey",
            "in": "path",
            "description": "La clé de l'offre",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'offre a été mise à jour.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "401": {
            "description": "Le contexte utilisateur ne permet pas de créer une offre avec cette clé d'offre"
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          },
          "409": {
            "description": "La clé de l'offre existe déjà dans l'organisation."
          }
        }
      },
      "delete": {
        "tags": [
          "offre"
        ],
        "summary": "Supprimer une offre d'une organisation",
        "description": "Suppression d'une offre pour une organisation données.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerKey",
            "in": "path",
            "description": "La clé de l'offre",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'offre a été supprimé.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "401": {
            "description": "Le contexte utilisateur ne permet pas de créer une offre avec cette clé d'offre"
          },
          "404": {
            "description": "Le tenant, l'organisation ou l'offre n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/offers/{offerKey}/_init": {
      "post": {
        "tags": [
          "offre"
        ],
        "summary": "initialiser les offres des consentements à l'aide d'une liste d'utilisateurs (csv ou ndjson). Le content-type doit refleter le type de fichier application/json ou application/csv",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerKey",
            "in": "path",
            "description": "La clé de l'offre",
            "required": true,
            "type": "string"
          },
          {
            "name": "setToFalse",
            "description": "les couples {cléGroup.cléConsentement} à initialiser à false",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "drop",
            "description": "La première ligne du fichier csv doit elle être exclue",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "separator",
            "description": "type de séparateur CSV",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "binary file",
            "description": "fichier csv ou ndjson d'initialisation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fileUpload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "la liste des userIds avec l'annotation true ou false, reflettant le bon déroulement de l'initialisation",
            "schema": {
              "$ref": "#/definitions/offerInitResponse"
            }
          },
          "415": {
            "description": "le content-type de la requête n'est pas pris en charge"
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/_template": {
      "get": {
        "tags": [
          "utilisateur"
        ],
        "summary": "La structure de consentements.",
        "description": "Récupération de la structure de consentements à partir de la dernière version publiée de l'organisation. Les offres seront filtrées par le contexte utilisateur.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Identifiant de l'utilisateur pour lequel vous souhaitez mettre à jour les consentements à partir de la dernière version publiée de l'organisation",
            "required": false,
            "type": "string"
          },
          {
            "name": "offerKeys",
            "in": "query",
            "description": "Liste de clé d'offre pour lesquelles vous souhaitez récupérer la structure des consentements",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La structure des consentements. Si un utilisateur était spécifié dans les paramètres alors la structure des consentements sera pré-rempli à partir de la version précédemment validé pour l'utilisateur. Les conditions de préremplissage sont que le libellé et la clé du groupe n'ont pas été modifié et que le libellé et la clé de la permission n'ont pas été modifié.",
            "schema": {
              "$ref": "#/definitions/ConsentFact"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/{userId}": {
      "get": {
        "tags": [
          "utilisateur"
        ],
        "summary": "Consentements d'un utilisateur.",
        "description": "Récupération des consentements enregistrés pour un utilisateur donné pour une organisation donnée filtrés par le contexte utilisateur.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "showExpiredConsents",
            "in": "query",
            "description": "Consentement expiré oui / non",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Les consentements de l'utilisateur.",
            "schema": {
              "$ref": "#/definitions/ConsentFact"
            }
          },
          "404": {
            "description": "Le tenant, l'organisation ou l'utilisateur n'existe pas."
          }
        }
      },
      "put": {
        "tags": [
          "utilisateur"
        ],
        "summary": "Mise à jour des consentements.",
        "description": "Mise à jour des consentements d'un utilisateur. Si l'utilisateur n'existait pas dans Nio, nous vérifions que la structure de consentements transmise corresponds bien à la structure de la dernière version publiée de l'organisation. Si l'utilisateur existe et que la version présente dans Nio est la même que la version envoyée, on vérifie que la structure de consentements transmise corresponds bien à la structure spécifiée. Si l'utilisateur existe et que la version présente dans Nio est inférieur à la version envoyée, on vérifie que la structure des consentements pour cette version corresponds bien à la version envoyée. Dans les autres cas l'api retournera une erreur 400.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "consentements",
            "in": "body",
            "description": "Les consentements de l'utilisateur",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsentFact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les consentements de l'utilisateur ont été mis à jour.",
            "schema": {
              "$ref": "#/definitions/ConsentFact"
            }
          },
          "401": {
            "description": "Le contexte utilisateur ne permet de souscrire ou de modifier les consentements d'une offre."
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          },
          "409": {
            "description": "La date de mise a jour des consentements (ou des consentemnt liés à une offre) est inferieure à celle déjà précédemment renseignée"
          }
        }
      },
      "patch": {
        "tags": [
          "utilisateur"
        ],
        "summary": "Mise à jour partiel des consentements.",
        "description": "Mise à jour partiel des consentements d'un utilisateur. Si l'utilisateur n'existait pas dans Nio, nous vérifions que la structure de consentements transmise corresponds bien à la structure de la dernière version publiée de l'organisation. Si l'utilisateur existe et que la version présente dans Nio est la même que la version envoyée, on vérifie que la structure de consentements transmise corresponds bien à la structure spécifiée. Si l'utilisateur existe et que la version présente dans Nio est inférieur à la version envoyée, on vérifie que la structure des consentements pour cette version corresponds bien à la version envoyée. Dans les autres cas l'api retournera une erreur 400.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "consentements",
            "in": "body",
            "description": "Les consentements de l'utilisateur",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialConsentFact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les consentements de l'utilisateur ont été mis à jour.",
            "schema": {
              "$ref": "#/definitions/ConsentFact"
            }
          },
          "401": {
            "description": "Le contexte utilisateur ne permet de souscrire ou de modifier les consentements d'une offre."
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          },
          "409": {
            "description": "La date de mise a jour des consentements (ou des consentemnt liés à une offre) est inferieure à celle déjà précédemment renseignée"
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/{userId}/logs": {
      "get": {
        "tags": [
          "utilisateur"
        ],
        "summary": "Historique des consentements d'un utilisateur.",
        "description": "Récupération de la liste paginée des consentements enregistrés pour un utilisateur donné pour une organisation donnée filtrés par le contexte utilisateur.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numéro de la page",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élément",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "L'historique des consentements de l'utilisateur.",
            "schema": {
              "$ref": "#/definitions/ConsentFactHistory"
            }
          },
          "404": {
            "description": "Le tenant, l'organisation ou l'utilisateur n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users": {
      "get": {
        "tags": [
          "utilisateur"
        ],
        "summary": "La liste paginée des utilisateurs d'une organisation.",
        "description": "Récupération de la liste paginée des utilisateurs pour une organisation donnée.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numero de la page (0 par défaut)",
            "required": false,
            "type": "string",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élements par page (10 par défaut)",
            "required": false,
            "type": "string",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "La liste paginée des utilisateurs de l'organisation.",
            "schema": {
              "items": {
                "$ref": "#/definitions/PagedUsers"
              }
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/users": {
      "get": {
        "tags": [
          "utilisateur"
        ],
        "summary": "La liste des utilisateurs.",
        "description": "Récupération de la liste des utilisateurs pour un tenant donné.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numero de la page (0 par défaut)",
            "required": false,
            "type": "string",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élements par page (10 par défaut)",
            "required": false,
            "type": "string",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des utilisateurs du tenant.",
            "schema": {
              "items": {
                "$ref": "#/definitions/PagedUsers"
              }
            }
          },
          "404": {
            "description": "Le tenant n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/users.ndjson": {
      "get": {
        "tags": [
          "utilisateur"
        ],
        "summary": "La liste des utilisateurs en tant que fichier.",
        "description": "Récupération de la liste des utilisateurs en tant que fichier .ndjson pour un tenant donné.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Flux .ndjson d'utilisateurs du tenant."
          },
          "404": {
            "description": "Le tenant n'existe pas."
          }
        }
      }
    },
    "/api/:tenant/organisations/:orgKey/users/:userId/offers/:offerKey": {
      "delete": {
        "tags": [
          "utilisateur"
        ],
        "summary": "Supprimer une offre des consentements utilisateur.",
        "description": "Suppression d'une offre des consentements de l'utilisateur. Si l'offre n'est pas souscrite par l'utilisateur, l'api retournera erreur 400 ",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerKey",
            "in": "path",
            "description": "La clé de l'offre",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'offre supprimée",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "401": {
            "description": "Le contexte utilisateur ne permet pas de supprimer une offre avec cette clé d'offre"
          },
          "404": {
            "description": "Le tenant, l'organisation, l'utilisateur ou l'offre n'existe pas"
          }
        }
      }
    },
    "/api/tenants": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "La liste des tenants",
        "description": "Récupération de la liste des tenants.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des tenants.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tenant"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tenant"
        ],
        "summary": "Nouveau tenant.",
        "description": "Création d'un nouveau tenant.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant-admin-secret",
            "in": "header",
            "description": "Tenant admin secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "description": "Le tenant à créer.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Le tenant a été créé.",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          },
          "401": {
            "description": "Le header \"tenant-admin-secret\" est manquant"
          }
        }
      }
    },
    "/api/tenants/{tenantId}": {
      "delete": {
        "tags": [
          "tenant"
        ],
        "summary": "Supprimer un tenant.",
        "description": "Suppression d'un tenant.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant-admin-secret",
            "in": "header",
            "description": "Tenant admin secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Le tenant a été supprimé ainsi que les organisations, consentements et utilisateurs liés au tenant."
          },
          "401": {
            "description": "Le header \"tenant-admin-secret\" est manquant"
          }
        }
      }
    },
    "/api/{tenant}/accounts": {
      "post": {
        "tags": [
          "compte"
        ],
        "summary": "Créer un compte permettant d'associer des utilisateurs à un seul compte",
        "description": "Création d'un compte permettant d'associer des utilisateurs à un seul compte",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "compte",
            "description": "Le compte à créer.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Le compte a été créé.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "409": {
            "description": "Le compte avec l'identifiant \"accountId\" existe déjà"
          }
        }
      },
      "get": {
        "tags": [
          "compte"
        ],
        "summary": "Récupérer la liste des comptes pour un tenant donné",
        "description": "Récupération de la liste des comptes pour un tenant donné",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numéro de la page",
            "required": false,
            "type": "number"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élément",
            "required": false,
            "type": "number"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des comptes du tenant.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        }
      }
    },
    "/api/{tenant}/accounts/{accountId}": {
      "put": {
        "tags": [
          "compte"
        ],
        "summary": "Mettre à jour un compte permettant d'associer des utilisateurs à un seul compte",
        "description": "Mise à jour d'un compte permettant d'associer des utilisateurs à un seul compte",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "L'identifiant de compte que vous souhaitez mettre à jour",
            "required": true,
            "type": "string"
          },
          {
            "name": "compte",
            "description": "Le compte à mettre à jour.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le compte a été mis à jour.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "L'identifiant de compte passé dans le chemin et l'identifiant de compte passé dans la structure envoyée ne correspondent pas"
          },
          "404": {
            "description": "L'identifiant de compte n'est pas connu."
          }
        }
      },
      "get": {
        "tags": [
          "compte"
        ],
        "summary": "Récupérer un compte par son identifiant",
        "description": "Récupération d'un compte par son identifiant",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "L'identifiant de compte que vous souhaitez récupérer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Le compte correspondant à l'identifiant passé en paramètre.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "404": {
            "description": "L'identifiant de compte n'est pas connu."
          }
        }
      },
      "delete": {
        "tags": [
          "compte"
        ],
        "summary": "Supprimer un compte par son identifiant",
        "description": "Suppression d'un compte par son identifiant",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "L'identifiant de compte que vous souhaitez supprimer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Le compte correspondant à l'identifiant passé en paramètre a bien été supprimé."
          },
          "404": {
            "description": "L'identifiant de compte n'est pas connu."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/deletions": {
      "get": {
        "tags": [
          "suppression"
        ],
        "summary": "Liste des tâches de suppression",
        "description": "Retourne la liste paginée des tâches de suppression en cours ou terminées pour tous les utilisateurs d'une organisation specifique.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numero de la page (0 par défaut)",
            "required": false,
            "type": "string",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élements par page (10 par défaut)",
            "required": false,
            "type": "string",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "La liste paginée des taches de suppressions.",
            "schema": {
              "items": {
                "$ref": "#/definitions/PagedDeletionTasks"
              }
            }
          },
          "404": {
            "description": "Le tenant n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/deletions/{deletionTaskId}": {
      "get": {
        "tags": [
          "suppression"
        ],
        "summary": "Details d'une tâche de suppression",
        "description": "Retourne la liste paginée des tâches de suppression en cours ou terminées pour tous les utilisateurs d'une organisation specifique.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletionTaskId",
            "in": "path",
            "description": "Identifiant de la tache",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Détails d'une tache de suppression.",
            "schema": {
              "items": {
                "$ref": "#/definitions/DeletionTask"
              }
            }
          },
          "404": {
            "description": "Le tenant n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/{userId}/deletion/_start": {
      "post": {
        "tags": [
          "suppression"
        ],
        "summary": "Lance la suppression des données",
        "description": "Lance la tâche de suppression des données; nio va emmettre les évenements sur le topic kafka pour avertir les applications concernées de la nécessité de suppression des données de l'utilisateur identifié userId.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant de l'utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletinTaskInput",
            "in": "body",
            "description": "Les données d'entrée.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeletionTaskInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La tache de suppression crée.",
            "schema": {
              "$ref": "#/definitions/DeletionTask"
            }
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/deletions/{deletionTaskId}/apps/{appId}/_done": {
      "post": {
        "tags": [
          "suppression"
        ],
        "summary": "Mise à jour de la tâche de suppression",
        "description": "Met à jour la tâche de supression, l'application spécifiée est considerée comme ayant terminé la suppression.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletionTaskId",
            "in": "path",
            "description": "Identifiant de la tâche",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "Identifiant de l'application",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Si la tâche a été mise à jour avec succés."
          },
          "404": {
            "description": "Le tenant n'existe pas."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/{userId}/_extract": {
      "post": {
        "tags": [
          "extraction"
        ],
        "summary": "Demander l'extraction de données pour un utilisateur.",
        "description": "Demande l'extraction des données pour un utilisateur spécifique. Un événement est publié dans Kafka et les applications lors de la réception peuvent alors démarrer le chargement d'un fichier qu'ils devront transmettre à Nio.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant de l'utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "userExtract",
            "in": "body",
            "description": "Les données d'entrée.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserExtract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La demande d'extraction a été prise en compte.",
            "schema": {
              "$ref": "#/definitions/UserExtractTask"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation est inconnu"
          },
          "409": {
            "description": "Une demande d'extraction a déjà été réalisée avec ces paramètres"
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/{userId}/_files/*name": {
      "post": {
        "tags": [
          "extraction"
        ],
        "summary": "Chargement du fichier correspondant à l'extraction des données de l'utilisateur.",
        "description": "Chargement du fichier correspondant à l'extraction des données de l'utilisateur.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant de l'utilisateur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Le chargement est terminé."
          },
          "404": {
            "description": "Le tenant ou l'organisation est inconnu ou aucune demande d'extraction pour cet utilisateur, organisation, tenant n'a été demandé."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/_extracted": {
      "get": {
        "tags": [
          "extraction"
        ],
        "summary": "Récupérer la liste des extractions réalisées pour une organisation.",
        "description": "Récupération de la liste des extractions réalisées pour une organisation.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numero de la page (0 par défaut)",
            "required": false,
            "type": "string",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élements par page (10 par défaut)",
            "required": false,
            "type": "string",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "La liste paginée des extractions.",
            "schema": {
              "$ref": "#/definitions/PagedUserExtractTask"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation est inconnu."
          }
        }
      }
    },
    "/api/{tenant}/organisations/{orgKey}/users/{userId}/_extracted": {
      "get": {
        "tags": [
          "extraction"
        ],
        "summary": "Récupérer la liste des extractions réalisées pour un utilisateur donné.",
        "description": "Récupération de la liste des extractions réalisées pour un utilisateur donné.",
        "parameters": [
          {
            "name": "$CLIENT_ID",
            "in": "header",
            "description": "Otoroshi client id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$CLIENT_SECRET",
            "in": "header",
            "description": "Otoroshi client secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Le nom du tenant",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgKey",
            "in": "path",
            "description": "La clé de l'organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "L'identifiant utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Le numero de la page (0 par défaut)",
            "required": false,
            "type": "string",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Le nombre d'élements par page (10 par défaut)",
            "required": false,
            "type": "string",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "La liste paginée des extractions.",
            "schema": {
              "$ref": "#/definitions/PagedUserExtractTask"
            }
          },
          "404": {
            "description": "Le tenant ou l'organisation est inconnu."
          }
        }
      }
    }
  },
  "definitions": {
    "OrganisationLight": {
      "type": "object",
      "description": "structure simple d'une organisation",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé de l'organisation"
        },
        "label": {
          "type": "string",
          "description": "libellé de l'organisation"
        },
        "version": {
          "type": "object",
          "description": "descriptif de la version de l'organisation",
          "properties": {
            "status": {
              "type": "string",
              "description": "status de l'organisation (DRAFT ou RELEASED)"
            },
            "num": {
              "type": "integer",
              "description": "numéro de version de l'organisation"
            }
          }
        }
      }
    },
    "Version": {
      "type": "object",
      "description": "descriptif de la version pour une organisation",
      "properties": {
        "status": {
          "type": "string",
          "description": "status de l'organisation (DRAFT ou RELEASED)"
        },
        "num": {
          "type": "integer",
          "description": "numéro de version de l'organisation"
        },
        "latest": {
          "type": "boolean",
          "description": "valeur à true si cette version est la dernière version publiée"
        },
        "neverReleased": {
          "type": "boolean",
          "description": "valeur à false si l'organisation n'a jamais été publiée"
        },
        "lastUpdate": {
          "type": "string",
          "description": "date de dernière mise à jour de l'organisation au format \"YYYY-MM-DDTHH:mm:ssZ\""
        }
      }
    },
    "Permission": {
      "type": "object",
      "description": "structure représentant une permission",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé de la permission"
        },
        "label": {
          "type": "string",
          "description": "libellé de la permission"
        }
      }
    },
    "PermissionGroup": {
      "type": "object",
      "description": "structure représentant un groupe de permissions",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé du groupe de permissions"
        },
        "label": {
          "type": "string",
          "description": "libellé du groupe de permissions"
        },
        "permissions": {
          "type": "array",
          "description": "liste des permissions associées au groupe",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      }
    },
    "Organisation": {
      "type": "object",
      "description": "structure représentant une organisation",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé de l'organisation"
        },
        "label": {
          "type": "string",
          "description": "libellé de l'organisation"
        },
        "groups": {
          "type": "array",
          "description": "liste des groupes associés à l'organisation",
          "items": {
            "$ref": "#/definitions/PermissionGroup"
          }
        },
        "version": {
          "$ref": "#/definitions/Version"
        }
      }
    },
    "Consent": {
      "type": "object",
      "description": "structure représentant un consentement",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé du consentement"
        },
        "label": {
          "type": "string",
          "description": "libellé du consentement"
        },
        "checked": {
          "type": "boolean",
          "description": "si la valeur est à true alors le consentement est accepté sinon il est refusé"
        }
      }
    },
    "ConsentGroup": {
      "type": "object",
      "description": "structure représentant un groupe de consentement",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé du groupe de consentements"
        },
        "label": {
          "type": "string",
          "description": "libellé du groupe de consentements"
        },
        "consents": {
          "type": "array",
          "description": "La liste des consentements associés au groupe",
          "items": {
            "$ref": "#/definitions/Consent"
          }
        }
      }
    },
    "MetaDataEntry": {
      "type": "object",
      "description": "definition d'une meta donnée",
      "properties": {
        "userId": {
          "type": "string",
          "description": "clé de la meta donnée"
        },
        "orgKey": {
          "type": "string",
          "description": "valeur de la meta donnée"
        }
      }
    },
    "ConsentFactHistory": {
      "type": "object",
      "description": "structure représentant l'historique des consentements d'un utilisateur",
      "properties": {
        "page": {
          "type": "integer",
          "example": 0,
          "description": "page courante de la pagination de l'historique"
        },
        "pageSize": {
          "type": "integer",
          "example": 10,
          "description": "nombre de consentements utilisateur par page d'historique"
        },
        "count": {
          "type": "integer",
          "example": 50,
          "description": "nombre total de consentements utilisateurs"
        },
        "items": {
          "type": "array",
          "description": "La liste des consentements",
          "items": {
            "$ref": "#/definitions/ConsentFact"
          }
        }
      }
    },
    "ConsentFact": {
      "type": "object",
      "description": "structure représentant l'ensemble des consentements d'un utilisateur",
      "properties": {
        "userId": {
          "type": "string",
          "description": "identifiant de l'utilisateur"
        },
        "orgKey": {
          "type": "string",
          "description": "clé de l'organisation à laquelle appartient l'utilisateur"
        },
        "lastUpdate": {
          "type": "string",
          "description": "date de dernière mise à jour des consentements de l'utilisateur au format \"YYYY-MM-DDTHH:mm:ssZ\""
        },
        "metaData": {
          "type": "array",
          "description": "meta données liées au consentements",
          "items": {
            "$ref": "#/definitions/MetaDataEntry"
          }
        },
        "doneBy": {
          "type": "object",
          "description": "description de la personne ou de l'entité ayant réalisé l'opération",
          "properties": {
            "userId": {
              "type": "string",
              "description": "identifiant d'un utilisateur"
            },
            "role": {
              "type": "string",
              "description": "role de l'utilisateur ayant réalisé l'opération"
            }
          }
        },
        "version": {
          "type": "integer",
          "description": "numéro de version publié de l'organisation associé sur laquelle la structure de consentements a été récupérée"
        },
        "groups": {
          "type": "array",
          "description": "liste des groupes de consentements associés à l'utilisateur",
          "items": {
            "$ref": "#/definitions/ConsentGroup"
          }
        },
        "offers": {
          "type": "array",
          "description": "liste des offres souscrites par l'utilisateur",
          "items": {
            "$ref": "#/definitions/ConsentOffer"
          }
        }
      }
    },
    "PartialConsentFact": {
      "type": "object",
      "description": "structure représentant un vue partielle des consentements d'un utilisateur",
      "properties": {
        "userId": {
          "type": "string",
          "description": "identifiant de l'utilisateur"
        },
        "orgKey": {
          "type": "string",
          "description": "clé de l'organisation à laquelle appartient l'utilisateur"
        },
        "lastUpdate": {
          "type": "string",
          "description": "date de dernière mise à jour des consentements de l'utilisateur au format \"YYYY-MM-DDTHH:mm:ssZ\""
        },
        "metaData": {
          "type": "array",
          "description": "meta données liées au consentements",
          "items": {
            "$ref": "#/definitions/MetaDataEntry"
          }
        },
        "doneBy": {
          "type": "object",
          "description": "description de la personne ou de l'entité ayant réalisé l'opération",
          "properties": {
            "userId": {
              "type": "string",
              "description": "identifiant d'un utilisateur"
            },
            "role": {
              "type": "string",
              "description": "role de l'utilisateur ayant réalisé l'opération"
            }
          }
        },
        "version": {
          "type": "integer",
          "description": "numéro de version publié de l'organisation associé sur laquelle la structure de consentements a été récupérée"
        },
        "groups": {
          "type": "array",
          "description": "liste des groupes de consentements associés à l'utilisateur",
          "items": {
            "$ref": "#/definitions/ConsentGroup"
          }
        },
        "offers": {
          "type": "array",
          "description": "liste des offres souscrites par l'utilisateur",
          "items": {
            "$ref": "#/definitions/ConsentOffer"
          }
        }
      }
    },
    "Tenant": {
      "type": "object",
      "description": "structure représentant un environnement",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé du tenant"
        },
        "description": {
          "type": "string",
          "description": "description du tenant"
        }
      }
    },
    "User": {
      "type": "object",
      "description": "structure simple d'un utilisateur",
      "properties": {
        "userId": {
          "type": "string",
          "description": "identifiant de l'utilisateur"
        },
        "orgKey": {
          "type": "string",
          "description": "clé de l'organisation"
        }
      }
    },
    "PagedUsers": {
      "type": "object",
      "description": "structure simple d'une page",
      "properties": {
        "page": {
          "type": "string",
          "description": "page courante"
        },
        "pageSize": {
          "type": "string",
          "description": "taille de la page"
        },
        "count": {
          "type": "integer",
          "description": "Nombre total d'élements"
        },
        "items": {
          "type": "array",
          "description": "Les élements de la page",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "Account": {
      "type": "object",
      "description": "compte d'un utilisateur final représentant la liste des associations utilisateur et organisation",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "identifiant du compte de l'utilisateur final"
        },
        "lastUpdate": {
          "type": "string",
          "description": "date de dernière mise à jour du compte de l'utilisateur final au format \"YYYY-MM-DDTHH:mm:ssZ\""
        },
        "organisationsUsers": {
          "type": "array",
          "description": "liste des associations utilisateur et organisation",
          "items": {
            "$ref": "#/definitions/OrganisationUser"
          }
        }
      }
    },
    "OrganisationUser": {
      "type": "object",
      "description": "structure de l'association d'un utilisateur avec une organisation",
      "properties": {
        "userId": {
          "type": "string",
          "description": "identifiant de l'utilisateur"
        },
        "orgKey": {
          "type": "string",
          "description": "clé de l'organisation"
        }
      }
    },
    "AppDeletionState": {
      "type": "object",
      "description": "informations relatives à une suppression des données d'un utilisateur",
      "properties": {
        "appId": {
          "type": "string",
          "description": "L'identifiant de l'application"
        },
        "status": {
          "type": "string",
          "description": "Status de la suppression des données de l'application"
        }
      }
    },
    "DeletionTask": {
      "type": "object",
      "description": "informations relatives à une suppression des données d'un utilisateur",
      "properties": {
        "id": {
          "type": "string",
          "description": "identifiant de la tache"
        },
        "orgKey": {
          "type": "string",
          "description": "clé de l'organisation"
        },
        "userId": {
          "type": "string",
          "description": "identifiant de l'utilisateur"
        },
        "startedAt": {
          "type": "string",
          "description": "date de création de la tache au format \"YYYY-MM-DDTHH:mm:ssZ\""
        },
        "appIds": {
          "type": "array",
          "description": "liste des identifiants d'application concernés par la suppression des données",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "description": "liste d'états de supressions par application",
          "items": {
            "$ref": "#/definitions/AppDeletionState"
          }
        },
        "status": {
          "type": "string",
          "description": "status de la tache de suppression"
        },
        "lastUpdate": {
          "type": "string",
          "description": "date de dernière mise à jour au format \"YYYY-MM-DDTHH:mm:ssZ\""
        }
      }
    },
    "DeletionTaskInput": {
      "type": "object",
      "description": "données d'entrée d'une suppression des données d'un utilistaeur",
      "properties": {
        "appIds": {
          "type": "array",
          "description": "Les identifiants des applications à avertir pour",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PagedDeletionTasks": {
      "type": "object",
      "description": "structure simple d'une page contenant des tâches de suppression",
      "properties": {
        "page": {
          "type": "string",
          "description": "page courante"
        },
        "pageSize": {
          "type": "string",
          "description": "taille de la page"
        },
        "count": {
          "type": "integer",
          "description": "Nombre total d'élements"
        },
        "items": {
          "type": "array",
          "description": "Les élements de la page",
          "items": {
            "$ref": "#/definitions/DeletionTask"
          }
        }
      }
    },
    "UserExtract": {
      "type": "object",
      "description": "définition d'une demande d'extraction",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email de l'utilisateur cible"
        }
      }
    },
    "UserExtractTask": {
      "type": "object",
      "description": "définition de la demande validée d'extraction",
      "properties": {
        "_id": {
          "type": "string",
          "description": "identifiant de la demande d'extraction"
        },
        "tenant": {
          "type": "string",
          "description": "tenant de la demande"
        },
        "orgKey": {
          "type": "string",
          "description": "clé de l'organisation de la demande"
        },
        "userId": {
          "type": "string",
          "description": "identifiant de l'utilisateur de la demande"
        },
        "email": {
          "type": "string",
          "description": "email de l'utilisateur"
        },
        "startedAt": {
          "type": "string",
          "description": "date de la demande"
        },
        "uploadStartedAt": {
          "type": "string",
          "description": "date de démarrage de l'upload du fichier"
        },
        "endedAt": {
          "type": "string",
          "description": "date fin de traitement de la demande"
        }
      }
    },
    "PagedUserExtractTask": {
      "type": "object",
      "description": "structure simple d'une page contenant des tâches d'extraction",
      "properties": {
        "page": {
          "type": "string",
          "description": "page courante"
        },
        "pageSize": {
          "type": "string",
          "description": "taille de la page"
        },
        "count": {
          "type": "integer",
          "description": "Nombre total d'élements"
        },
        "items": {
          "type": "array",
          "description": "Les élements de la page",
          "items": {
            "$ref": "#/definitions/UserExtractTask"
          }
        }
      }
    },
    "Offer": {
      "type": "object",
      "description": "structure représentant une offre",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé de l'offre"
        },
        "label": {
          "type": "string",
          "description": "libellé de l'offre"
        },
        "version": {
          "type": "integer",
          "description": "version de l'offre"
        },
        "groups": {
          "type": "array",
          "description": "liste des groupes associés à l'offre",
          "items": {
            "$ref": "#/definitions/PermissionGroup"
          }
        }
      }
    },
    "ConsentOffer": {
      "type": "object",
      "description": "structure représentant les consentements d'une offre",
      "properties": {
        "key": {
          "type": "string",
          "description": "clé de l'offre"
        },
        "label": {
          "type": "string",
          "description": "libellé de l'offre"
        },
        "lastUpdate": {
          "type": "string",
          "description": "date de dernière mise à jour des consentements de l'offre, au format \"YYYY-MM-DDTHH:mm:ssZ\""
        },
        "version": {
          "type": "integer",
          "description": "version de l'offre"
        },
        "groups": {
          "type": "array",
          "description": "liste des groupes de consentements associés à l'offre",
          "items": {
            "$ref": "#/definitions/ConsentGroup"
          }
        }
      }
    },
    "offerInitResponse": {
      "type": "array",
      "description": "liste des etat d'enregistrement des utilisateur a initialiser",
      "items": {
        "$ref": "#/definitions/offerInitRecord"
      }
    },
    "offerInitRecord": {
      "type": "object",
      "description": "structure représentant la réponse d'initialisation d'une offre",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Id de l'utilisateur",
          "example": "userId"
        },
        "status": {
          "type": "boolean",
          "description": "Etat de l'enregistrement"
        }
      }
    },
    "fileUpload": {
      "type": "string",
      "format": "binary",
      "description": "fichier binaire (CSV ou JSON) comprenant le userId et la date d'initialisation de l'offre",
      "example": {
        "userId": "1-222-42",
        "date": "2018-01-01T10:10:10Z"
      }
    }
  }
}